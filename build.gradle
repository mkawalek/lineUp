group 'agh.edu.pl'
version 'latest'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE"
        classpath 'com.netflix.nebula:gradle-lint-plugin:latest.release'
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

group = 'line-up'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'nebula.lint'
apply plugin: 'docker'

jar {
    baseName = 'line-up'
    version =  '0.1.0'
}

gradleLint.rules = ['duplicate-dependency-class', 'overridden-dependency-version']

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile ('org.springframework.boot:spring-boot-starter-web')
    compile 'org.springframework.boot:spring-boot-starter-data-mongodb:1.5.3.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-security'

    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'org.json:json:20160212'
    compile 'net.jodah:failsafe:0.9.2'
    compile 'io.jsonwebtoken:jjwt:0.6.0'

    compile 'com.google.guava:guava:19.0'

    compile 'org.testng:testng:6.8.8'
    compile 'com.jayway.restassured:rest-assured:2.9.0'

    testCompile 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:1.50.3'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'junit:junit:4.12'
    testCompile 'com.jayway.jsonpath:json-path'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}

task buildDocker(type: Docker, dependsOn: build) {
    push = true
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}